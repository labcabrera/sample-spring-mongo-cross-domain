buildscript {
	ext {
		springBootVersion       = '2.1.0.RELEASE'
		rsqlQuerydslVersion     = '2.0.0.RELEASE'
		springfoxSwaggerVersion = '2.9.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot'           version '2.1.0.RELEASE' apply false
	id "com.ewerk.gradle.plugins.querydsl"  version '1.0.10'        apply false
}

subprojects {

	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'io.spring.dependency-management'
	
	group = 'org.lab.samples.mongo'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 1.8
	
	repositories {
		mavenCentral()
	}

}

project(':sample-shared-model') {
	apply plugin: "com.ewerk.gradle.plugins.querydsl"
	dependencies {
		compile("com.github.vineey:rsql-querydsl-all:${rsqlQuerydslVersion}")
		compile('org.springframework.boot:spring-boot-starter-data-mongodb')
		compile('org.springframework.boot:spring-boot-starter-validation')
		compile('org.projectlombok:lombok')
	}
	querydsl {
		querydslDefault = true
		springDataMongo = true
	}
	dependencyManagement {
		imports {
			mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
		}
	}
}

project(':sample-api-model') {
	apply plugin: "com.ewerk.gradle.plugins.querydsl"
	dependencies {
		compile(project(':sample-shared-model'))
		compile('org.springframework.boot:spring-boot-starter-data-mongodb')
		compile('org.springframework.boot:spring-boot-starter-validation')
		compile('org.springframework.boot:spring-boot-starter-json')
		compile("com.github.vineey:rsql-querydsl-all:${rsqlQuerydslVersion}")
		compile('org.projectlombok:lombok')
	}
	querydsl {
		querydslDefault = true
		springDataMongo = true
	}
	dependencyManagement {
		imports {
			mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
		}
	}
}

project('sample-api') {
	apply plugin: 'org.springframework.boot'
	dependencies {
		implementation(project(':sample-shared-model')) { transitive = false }
		implementation(project(':sample-api-model')) { transitive = false }
		implementation('org.springframework.boot:spring-boot-starter-actuator')
		implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
		implementation('org.springframework.boot:spring-boot-starter-hateoas')
		implementation('org.springframework.boot:spring-boot-starter-web')
		implementation('com.querydsl:querydsl-core')
		implementation("com.github.vineey:rsql-querydsl-all:${rsqlQuerydslVersion}")
		implementation("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
		implementation("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")
		compileOnly('org.projectlombok:lombok')
		testImplementation('org.springframework.boot:spring-boot-starter-test')
	}
}

